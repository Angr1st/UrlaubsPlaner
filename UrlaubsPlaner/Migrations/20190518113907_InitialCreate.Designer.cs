// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrlaubsPlaner.Entities;

namespace UrlaubsPlaner.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20190518113907_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UrlaubsPlaner.Entities.Absence", b =>
                {
                    b.Property<Guid>("AbsenceID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AbsenceTypeId");

                    b.Property<Guid?>("EmployeeId");

                    b.Property<DateTime>("FromDate");

                    b.Property<string>("Reason");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("AbsenceID");

                    b.HasIndex("AbsenceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Absence");
                });

            modelBuilder.Entity("UrlaubsPlaner.Entities.AbsenceType", b =>
                {
                    b.Property<Guid>("AbsenceTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Label");

                    b.HasKey("AbsenceTypeId");

                    b.ToTable("AbsenceType");
                });

            modelBuilder.Entity("UrlaubsPlaner.Entities.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("UrlaubsPlaner.Entities.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("City");

                    b.Property<Guid?>("CountryId");

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Housenumber");

                    b.Property<string>("Lastname");

                    b.Property<string>("Phonenumber");

                    b.Property<string>("Postalcode");

                    b.Property<string>("Street");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CountryId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("UrlaubsPlaner.Entities.Absence", b =>
                {
                    b.HasOne("UrlaubsPlaner.Entities.AbsenceType", "AbsenceType")
                        .WithMany()
                        .HasForeignKey("AbsenceTypeId");

                    b.HasOne("UrlaubsPlaner.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("UrlaubsPlaner.Entities.Employee", b =>
                {
                    b.HasOne("UrlaubsPlaner.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
